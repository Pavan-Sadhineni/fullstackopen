{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/Notification.js","services/blogs.js","components/AddBlogForm.js","components/Togglable.js","services/login.js","App.js","index.js"],"names":["Blog","blog","onLikeClick","onRemoveClick","authUser","useState","isVisible","setVisible","className","title","author","onClick","data-test-id","url","likes","bind","id","user","name","username","LoginForm","onFormSubmit","usernameOnchange","passwordOnchange","password","onSubmit","htmlFor","type","placeholder","onChange","value","prototype","PropTypes","func","isRequired","string","Notification","message","defaultProps","token","setToken","newToken","getAll","a","axios","get","response","data","createBlog","newObject","config","headers","Authorization","post","updateBlog","put","deleteBlog","delete","AddBlogForm","titleOnchange","authorOnchange","urlOnchange","blogTitle","blogAuthor","blogUrl","Togglable","forwardRef","props","ref","visible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","node","displayName","login","credentials","App","blogs","setBlogs","setUsername","setPassword","setUser","newBlogTitle","setNewBlogTitle","newBlogAuthor","setNewBlogAuthor","newBlogUrl","setNewBlogUrl","notification","setNotification","blogFormRef","useRef","getAllBlogs","console","warn","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","timer","setTimeout","clearTimeout","isLoginDataValid","handleLoginFormSubmit","event","preventDefault","setItem","stringify","status","handlePasswordOnchange","target","handleUsernameOnchange","handleLogout","removeItem","handleTitleOnchange","handleAuthorOnchange","handleUrlOnchange","isNewBlogDataValid","handleAddBlogFormSubmit","newObj","current","statusText","error","handleBlogLikeClick","blogToUpdate","find","item","updatedBlog","updatedBlogList","map","handleBlogRemoveClick","confirm","filter","renderBlogList","length","sort","first","second","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f8f9473.chunk.js","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Blog = ({ blog, onLikeClick, onRemoveClick, authUser }) => {\r\n  const [isVisible, setVisible] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setVisible(!isVisible);\r\n  };\r\n\r\n  return (\r\n    <div className='mt-12 blog-list-item'>\r\n      {blog.title}, by {blog.author}\r\n      <button\r\n        onClick={handleToggle}\r\n        className='btn ml-8'\r\n        data-test-id='toggleBlog'\r\n      >\r\n        {isVisible ? 'Hide' : 'View'}\r\n      </button>\r\n      {isVisible && (\r\n        <>\r\n          <ul data-test-id='blogDetailsList'>\r\n            <li>{blog.url}</li>\r\n            <li>\r\n              Likes <span data-test-id='blogLikes'>{blog.likes}</span>\r\n              <button\r\n                onClick={onLikeClick.bind(null, blog.id)}\r\n                className='btn ml-8'\r\n                data-test-id='likeBlog'\r\n              >\r\n                Like\r\n              </button>\r\n            </li>\r\n            <li>{blog.user.name}</li>\r\n          </ul>\r\n          {authUser.username === blog.user.username && (\r\n            <button\r\n              onClick={onRemoveClick.bind(\r\n                null,\r\n                blog.id,\r\n                blog.title,\r\n                blog.author\r\n              )}\r\n              data-test-id='removeBlog'\r\n              className='btn mt-12 blog-item-remove-btn'\r\n            >\r\n              Remove\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    author: PropTypes.string,\r\n    id: PropTypes.string.isRequired,\r\n    url: PropTypes.string,\r\n    likes: PropTypes.number,\r\n  }).isRequired,\r\n  onLikeClick: PropTypes.func.isRequired,\r\n  onRemoveClick: PropTypes.func.isRequired,\r\n  authUser: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\nexport default Blog;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoginForm = ({\r\n  onFormSubmit,\r\n  usernameOnchange,\r\n  passwordOnchange,\r\n  username,\r\n  password,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h2>Login to the account!</h2>\r\n      <form onSubmit={onFormSubmit}>\r\n        <div className='form-control'>\r\n          <label htmlFor='username'>Username:</label>\r\n          <input\r\n            type='text'\r\n            placeholder='Enter username'\r\n            id='username'\r\n            onChange={usernameOnchange}\r\n            className='input-field'\r\n            value={username}\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor='password'>Password:</label>\r\n          <input\r\n            type='password'\r\n            placeholder='Enter password'\r\n            id='password'\r\n            onChange={passwordOnchange}\r\n            className='input-field'\r\n            password={password}\r\n          />\r\n        </div>\r\n        <button id='loginButton' className='btn'>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.prototype = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n  usernameOnchange: PropTypes.func.isRequired,\r\n  passwordOnchange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './../styles/notification.css';\r\n\r\nconst Notification = ({ message, type }) => (\r\n  <div\r\n    className={`${\r\n      type === 'unsuccessful' ? 'notification--error' : 'notification--success'\r\n    } notification`}\r\n  >\r\n    {message}\r\n  </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  type: PropTypes.oneOf(['successful', 'unsuccessful']),\r\n};\r\n\r\nNotification.defaultProps = {\r\n  type: 'successful',\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl);\r\n  return response.data;\r\n};\r\n\r\nconst createBlog = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.post(baseUrl, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst updateBlog = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteBlog = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\r\n  return response.data;\r\n};\r\n\r\nexport { getAll, setToken, createBlog, updateBlog, deleteBlog };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddBlogForm = ({\r\n  titleOnchange,\r\n  authorOnchange,\r\n  urlOnchange,\r\n  onFormSubmit,\r\n  blogTitle,\r\n  blogAuthor,\r\n  blogUrl,\r\n}) => (\r\n  <form onSubmit={onFormSubmit}>\r\n    <div className='form-control'>\r\n      <label htmlFor='title'>Title:</label>\r\n      <input\r\n        type='text'\r\n        placeholder='Enter title of the blog'\r\n        id='title'\r\n        onChange={titleOnchange}\r\n        className='input-field'\r\n        value={blogTitle}\r\n      />\r\n    </div>\r\n    <div className='form-control'>\r\n      <label htmlFor='author'>Author:</label>\r\n      <input\r\n        type='text'\r\n        placeholder='Enter author of the blog'\r\n        id='author'\r\n        onChange={authorOnchange}\r\n        className='input-field'\r\n        value={blogAuthor}\r\n      />\r\n    </div>\r\n    <div className='form-control'>\r\n      <label htmlFor='url'>Url:</label>\r\n      <input\r\n        type='text'\r\n        placeholder='Enter url of the blog'\r\n        id='url'\r\n        onChange={urlOnchange}\r\n        className='input-field'\r\n        value={blogUrl}\r\n      />\r\n    </div>\r\n    <button data-test-id='create' className='btn'>\r\n      Create\r\n    </button>\r\n  </form>\r\n);\r\n\r\nAddBlogForm.prototype = {\r\n  titleOnchange: PropTypes.func.isRequired,\r\n  authorOnchange: PropTypes.func.isRequired,\r\n  urlOnchange: PropTypes.func.isRequired,\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n  blogTitle: PropTypes.string.isRequired,\r\n  blogAuthor: PropTypes.string.isRequired,\r\n  blogUrl: PropTypes.string.isRequired,\r\n};\r\nexport default AddBlogForm;","import React, { useState, forwardRef, useImperativeHandle } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' };\r\n  const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility} className='btn mt-12'>\r\n          {props.buttonLabel}\r\n        </button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility} className='btn mt-12'>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nTogglable.prototype = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nTogglable.displayName = 'Togglable';\r\n\r\nexport default Togglable;","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport { login };","import React, { useState, useEffect, useRef } from 'react';\r\nimport Blog from './components/Blog';\r\nimport LoginForm from './components/LoginForm';\r\nimport Notification from './components/Notification';\r\nimport {\r\n  getAll,\r\n  setToken,\r\n  createBlog,\r\n  updateBlog,\r\n  deleteBlog,\r\n} from './services/blogs';\r\nimport AddBlogForm from './components/AddBlogForm';\r\nimport Togglable from './components/Togglable';\r\nimport { login } from './services/login';\r\nimport './styles/app.css';\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [newBlogTitle, setNewBlogTitle] = useState('');\r\n  const [newBlogAuthor, setNewBlogAuthor] = useState('');\r\n  const [newBlogUrl, setNewBlogUrl] = useState('');\r\n  const [notification, setNotification] = useState({});\r\n  const blogFormRef = useRef();\r\n\r\n  const getAllBlogs = async () => {\r\n    try {\r\n      const blogs = await getAll();\r\n      setBlogs(blogs);\r\n    } catch (error) {\r\n      setNotification({\r\n        message: 'Something went wrong',\r\n        type: 'unsuccessful',\r\n      });\r\n      console.warn(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllBlogs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON);\r\n      setUser(user);\r\n      setToken(user.token);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (notification.message) {\r\n      const timer = setTimeout(() => setNotification({}), 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [notification]);\r\n\r\n  const resetLoginForm = () => {\r\n    setUsername('');\r\n    setPassword('');\r\n  };\r\n\r\n  const isLoginDataValid = () => {\r\n    if (!username || !password) {\r\n      setNotification({\r\n        message: 'Please fill both fields.',\r\n        type: 'unsuccessful',\r\n      });\r\n      return;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleLoginFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (isLoginDataValid()) {\r\n      try {\r\n        const user = await login({ username, password });\r\n        setToken(user.token);\r\n        window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\r\n        setUser(user);\r\n        resetLoginForm();\r\n      } catch (error) {\r\n        if (error.response.status === 401) {\r\n          setNotification({\r\n            message: 'Wrong username or password',\r\n            type: 'unsuccessful',\r\n          });\r\n        } else {\r\n          console.warn(error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordOnchange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleUsernameOnchange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedBlogAppUser');\r\n    setUser(null);\r\n  };\r\n\r\n  const resetBlogForm = () => {\r\n    setNewBlogTitle('');\r\n    setNewBlogAuthor('');\r\n    setNewBlogUrl('');\r\n  };\r\n\r\n  const handleTitleOnchange = (event) => {\r\n    setNewBlogTitle(event.target.value);\r\n  };\r\n  const handleAuthorOnchange = (event) => {\r\n    setNewBlogAuthor(event.target.value);\r\n  };\r\n  const handleUrlOnchange = (event) => {\r\n    setNewBlogUrl(event.target.value);\r\n  };\r\n\r\n  const isNewBlogDataValid = () => {\r\n    if (!newBlogTitle || !newBlogAuthor || !newBlogUrl) {\r\n      setNotification({\r\n        message: 'Please fill all fields',\r\n        type: 'unsuccessful',\r\n      });\r\n      return;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleAddBlogFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (isNewBlogDataValid()) {\r\n      const newObj = {\r\n        title: newBlogTitle,\r\n        author: newBlogAuthor,\r\n        url: newBlogUrl,\r\n      };\r\n      try {\r\n        const response = await createBlog(newObj);\r\n        if (response) {\r\n          setNotification({\r\n            message: `A new blog ${newBlogTitle}, by ${newBlogAuthor} added`,\r\n          });\r\n          if (blogFormRef.current) {\r\n            blogFormRef.current.toggleVisibility();\r\n          }\r\n          const blogs = await getAll();\r\n          setBlogs(blogs);\r\n        }\r\n        resetBlogForm();\r\n      } catch (error) {\r\n        const { data, statusText } = error.response;\r\n        setNotification({\r\n          message: data.error || statusText,\r\n          type: 'unsuccessful',\r\n        });\r\n        console.warn(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBlogLikeClick = async (id) => {\r\n    const blogToUpdate = blogs.find((item) => item.id === id);\r\n    if (blogToUpdate) {\r\n      try {\r\n        const likes = blogToUpdate.likes ? blogToUpdate.likes + 1 : 1;\r\n        const updatedBlog = {\r\n          ...blogToUpdate,\r\n          likes,\r\n        };\r\n        const response = await updateBlog(id, updatedBlog);\r\n        if (response) {\r\n          const updatedBlogList = blogs.map((item) =>\r\n            item.id === id ? updatedBlog : item\r\n          );\r\n          setBlogs(updatedBlogList);\r\n        }\r\n      } catch (error) {\r\n        const { data, statusText } = error.response;\r\n        setNotification({\r\n          message: data.error || statusText,\r\n          type: 'unsuccessful',\r\n        });\r\n        console.warn(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBlogRemoveClick = async (id, title, author) => {\r\n    const message = `Remove blog ${title} by ${author}`;\r\n    if (window.confirm(message)) {\r\n      try {\r\n        await deleteBlog(id);\r\n        const updatedBlogList = blogs.filter((item) => item.id !== id);\r\n        setBlogs(updatedBlogList);\r\n      } catch (error) {\r\n        const { data, statusText } = error.response;\r\n        setNotification({\r\n          message: data.error || statusText,\r\n          type: 'unsuccessful',\r\n        });\r\n        console.warn(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderAddBlogForm = () => (\r\n    <Togglable buttonLabel='Create new Blog' ref={blogFormRef}>\r\n      <AddBlogForm\r\n        titleOnchange={handleTitleOnchange}\r\n        authorOnchange={handleAuthorOnchange}\r\n        urlOnchange={handleUrlOnchange}\r\n        onFormSubmit={handleAddBlogFormSubmit}\r\n        blogTitle={newBlogTitle}\r\n        blogAuthor={newBlogAuthor}\r\n        blogUrl={newBlogUrl}\r\n      />\r\n    </Togglable>\r\n  );\r\n\r\n  const renderLoginForm = () => (\r\n    <Togglable buttonLabel='Login'>\r\n      <LoginForm\r\n        onFormSubmit={handleLoginFormSubmit}\r\n        passwordOnchange={handlePasswordOnchange}\r\n        usernameOnchange={handleUsernameOnchange}\r\n        username={username}\r\n        password={password}\r\n      />\r\n    </Togglable>\r\n  );\r\n\r\n  const renderBlogsWrapper = () => {\r\n    return (\r\n      <>\r\n        <div className='user-introduction'>\r\n          <h3>{user.name} logged in!</h3>&nbsp;\r\n          <button onClick={handleLogout} className='btn' data-test-id='logout'>\r\n            Logout\r\n          </button>\r\n        </div>\r\n        {renderAddBlogForm()}\r\n        {renderBlogList()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderBlogList = () =>\r\n    blogs.length > 0 && (\r\n      <div className='blog-list-wrapper' data-test-id='blogListWrapper'>\r\n        {blogs\r\n          .sort((first, second) => second.likes - first.likes)\r\n          .map((blog) => (\r\n            <Blog\r\n              key={blog.id}\r\n              blog={blog}\r\n              onLikeClick={handleBlogLikeClick}\r\n              onRemoveClick={handleBlogRemoveClick}\r\n              authUser={user}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {notification.message && (\r\n        <Notification message={notification.message} type={notification.type} />\r\n      )}\r\n      <h2 className='main-title'>Blogs</h2>\r\n      {user && user.token ? renderBlogsWrapper() : renderLoginForm()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}